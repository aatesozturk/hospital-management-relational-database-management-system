/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import com.mysql.cj.jdbc.CallableStatement;
import com.mysql.cj.jdbc.Driver;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JTextField;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author atesz
 */
public class AddFamily extends javax.swing.JFrame {
    
    public long last_ID;
    public int is_admin;
    private Connection con;
    int asa;
    /**
     *
     */
    
    private Connection connect() {
        try {
            return DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", "Atoras21");
        } catch (SQLException ex) {
            ex.printStackTrace();
            return null;
        }
    }
    
    
    public void set_last_ID(long id){
        this.last_ID = id;
    }
    
    public AddFamily(long last_ıd,int _is_admin) {
        initComponents();
        this.last_ID = last_ıd;
        this.is_admin = _is_admin;
        con = connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        add_family_f_name_label = new javax.swing.JLabel();
        add_family_m_name_label = new javax.swing.JLabel();
        add_family_l_name_label = new javax.swing.JLabel();
        add_family_relation_label = new javax.swing.JLabel();
        add_family_phone_label = new javax.swing.JLabel();
        add_family_age_label = new javax.swing.JLabel();
        add_family_blood_label = new javax.swing.JLabel();
        add_family_f_name_textfield = new javax.swing.JTextField();
        add_family_m_name_textfield = new javax.swing.JTextField();
        add_family_l_name_textfield = new javax.swing.JTextField();
        add_family_relation_textfield = new javax.swing.JTextField();
        add_family_phone_textfield = new javax.swing.JTextField();
        add_family_age_textfield = new javax.swing.JTextField();
        add_family_blood_textfield = new javax.swing.JTextField();
        add_family_add_button = new javax.swing.JButton();
        add_family_cancel_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(500, 400));

        add_family_f_name_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add_family_f_name_label.setText("First Name");

        add_family_m_name_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add_family_m_name_label.setText("Middle Name");

        add_family_l_name_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add_family_l_name_label.setText("Last Name");

        add_family_relation_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add_family_relation_label.setText("Relationship");

        add_family_phone_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add_family_phone_label.setText("Phone Number");

        add_family_age_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add_family_age_label.setText("Age");

        add_family_blood_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add_family_blood_label.setText("Blood Type");

        add_family_add_button.setText("Add Family");
        add_family_add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_family_add_buttonActionPerformed(evt);
            }
        });

        add_family_cancel_button.setText("Cancel");
        add_family_cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_family_cancel_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(add_family_blood_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_family_age_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_family_relation_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_family_l_name_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_family_m_name_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_family_f_name_label, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(add_family_phone_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(add_family_cancel_button, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(add_family_add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(add_family_f_name_textfield)
                    .addComponent(add_family_m_name_textfield)
                    .addComponent(add_family_l_name_textfield)
                    .addComponent(add_family_relation_textfield)
                    .addComponent(add_family_phone_textfield)
                    .addComponent(add_family_age_textfield)
                    .addComponent(add_family_blood_textfield))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(add_family_f_name_textfield)
                    .addComponent(add_family_f_name_label, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(add_family_m_name_textfield)
                    .addComponent(add_family_m_name_label, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(add_family_l_name_textfield)
                    .addComponent(add_family_l_name_label, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(add_family_relation_textfield)
                    .addComponent(add_family_relation_label, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(add_family_phone_textfield)
                    .addComponent(add_family_phone_label, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(add_family_age_textfield, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(add_family_age_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(add_family_blood_label, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(add_family_blood_textfield))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add_family_cancel_button, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(add_family_add_button, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void add_family_cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_family_cancel_buttonActionPerformed
        
        if(is_admin == 0){
            new login().setVisible(true);
            this.setVisible(false);
        }
        else{
            new Admin().setVisible(true);
            this.setVisible(false);
        }
        
    }//GEN-LAST:event_add_family_cancel_buttonActionPerformed

    
    /*public void checkage(int age, int as){
        try {
            // Establish connection to MySQL database
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", "Atoras21");

            // Prepare the call to the stored procedure
            CallableStatement callableStatement = (CallableStatement) connection.prepareCall("{call check_age_constraint(?)}");

            // Set the age parameter
            callableStatement.setInt(1, age);

            // Execute the stored procedure
            callableStatement.execute();
            
            // Close the connection and statement
            callableStatement.close();
            connection.close();
            
        } catch (SQLException e) {
            this.setVisible(false);
            as = 0;
            JOptionPane.showMessageDialog(this, "Age must be above 0");
            new AddFamily(last_ID, is_admin).setVisible(true);
            if (con != null) {
                try {
                    String deleteSql = "DELETE FROM family WHERE Family_ID = ?";
                    PreparedStatement pstmt = con.prepareStatement(deleteSql);
                    pstmt.setLong(1, last_ID);
                    pstmt.executeUpdate();
                    this.asa = as;
                } catch (SQLException ex) {
                        Logger.getLogger(AddFamily.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }*/
    
    
    public void checkage(int age) {
    try {
        // Establish connection to MySQL database
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", "Atoras21");

        // Prepare the call to the stored procedure
        java.sql.CallableStatement callableStatement = connection.prepareCall("{call check_age_constraint(?)}");

        // Set the age parameter
        callableStatement.setInt(1, age);

        // Execute the stored procedure
        callableStatement.execute();
        
        // Close the connection and statement
        callableStatement.close();
        connection.close();
        
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Age must be above 0");
        new AddFamily(last_ID, is_admin).setVisible(true);
        this.dispose();
    }
}
    
    private void add_family_add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_family_add_buttonActionPerformed
        String f_name = add_family_f_name_textfield.getText();
    String m_name = add_family_m_name_textfield.getText();
    String l_name = add_family_l_name_textfield.getText();
    String age_s = add_family_age_textfield.getText();
    int age = Integer.parseInt(age_s);
    
    String relationship = add_family_relation_textfield.getText();
    String blood = add_family_blood_textfield.getText();
    String phone = add_family_phone_textfield.getText();

    try {
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", "Atoras21");
        String sql = "UPDATE family SET F_name = ?, M_name = ?, L_name = ?, Age = ?, Relation = ?, Blood_type = ?, Phone_number = ? WHERE Family_ID = ?";

        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setString(1, f_name);
        pstmt.setString(2, m_name);
        pstmt.setString(3, l_name);
        pstmt.setInt(4, age);
        pstmt.setString(5, relationship);
        pstmt.setString(6, blood);
        pstmt.setString(7, phone);
        pstmt.setLong(8, last_ID);

        int rowsAffected = pstmt.executeUpdate();
        checkage(age); // Check age constraint

        if (is_admin == 0) {
            new login().setVisible(true);
            this.dispose();
        } else {
            new Admin().setVisible(true);
            this.dispose();
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Invalid input. Please check your entries and try again.", "Input Error", JOptionPane.WARNING_MESSAGE);
        if (con != null) {
            try {
                String deleteSql = "DELETE FROM family WHERE Family_ID = ?";
                PreparedStatement pstmt = con.prepareStatement(deleteSql);
                pstmt.setLong(1, last_ID);
                pstmt.executeUpdate();
            } catch (SQLException e) {
                Logger.getLogger(AddFamily.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }
        
    }//GEN-LAST:event_add_family_add_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddFamily.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddFamily.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddFamily.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddFamily.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddFamily(0, 0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_family_add_button;
    private javax.swing.JLabel add_family_age_label;
    private javax.swing.JTextField add_family_age_textfield;
    private javax.swing.JLabel add_family_blood_label;
    private javax.swing.JTextField add_family_blood_textfield;
    private javax.swing.JButton add_family_cancel_button;
    private javax.swing.JLabel add_family_f_name_label;
    private javax.swing.JTextField add_family_f_name_textfield;
    private javax.swing.JLabel add_family_l_name_label;
    private javax.swing.JTextField add_family_l_name_textfield;
    private javax.swing.JLabel add_family_m_name_label;
    private javax.swing.JTextField add_family_m_name_textfield;
    private javax.swing.JLabel add_family_phone_label;
    private javax.swing.JTextField add_family_phone_textfield;
    private javax.swing.JLabel add_family_relation_label;
    private javax.swing.JTextField add_family_relation_textfield;
    // End of variables declaration//GEN-END:variables
}
