
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author atesz
 */
public class AdminAddStaff extends javax.swing.JFrame {

    /**
     *
     */
    public int is_admin_update;

    /**
     * Creates new form AdminAddStaff
     */
    public AdminAddStaff(int is_update){
        initComponents();
        this.is_admin_update = is_update;
        System.out.println(is_admin_update);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        admin_add_staff_f_name_label = new javax.swing.JLabel();
        admin_add_staff_m_name_label = new javax.swing.JLabel();
        admin_add_staff_l_name_label = new javax.swing.JLabel();
        admin_add_staff_password_label = new javax.swing.JLabel();
        admin_add_staff_title_label = new javax.swing.JLabel();
        admin_add_staff_phone_label = new javax.swing.JLabel();
        admin_add_staff_address_label = new javax.swing.JLabel();
        admin_add_staff_mail_label = new javax.swing.JLabel();
        admin_add_staff_hour_label = new javax.swing.JLabel();
        admin_add_staff_polyclinic_label = new javax.swing.JLabel();
        admin_add_staff_staff_ıd_label = new javax.swing.JLabel();
        admin_add_staff_f_name_textfield = new javax.swing.JTextField();
        admin_add_staff_m_name_textfield = new javax.swing.JTextField();
        admin_add_staff_l_name_textfield = new javax.swing.JTextField();
        admin_add_staff_password_textfield = new javax.swing.JTextField();
        admin_add_staff_title_textfield = new javax.swing.JTextField();
        admin_add_staff_phone_textfield = new javax.swing.JTextField();
        admin_add_staff_address_textfield = new javax.swing.JTextField();
        admin_add_staff_mail_textfield = new javax.swing.JTextField();
        admin_add_staff_hour_textfield = new javax.swing.JTextField();
        admin_add_staff_polyclinic_textfield = new javax.swing.JTextField();
        admin_add_staff_staff_ıd_textfield = new javax.swing.JTextField();
        admin_add_staff_add_staff_button = new javax.swing.JButton();
        admin_add_staff_cancel_button = new javax.swing.JButton();
        admin_add_staff_sex_label = new javax.swing.JLabel();
        admin_add_staff_male_sex_radiobutton = new javax.swing.JRadioButton();
        admin_add_staff_female_sex_radiobutton = new javax.swing.JRadioButton();
        admin_add_staff_no_family_button = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        admin_add_staff_f_name_label.setText("First Name");

        admin_add_staff_m_name_label.setText("Middle Name");

        admin_add_staff_l_name_label.setText("Last Name");

        admin_add_staff_password_label.setText("Password");

        admin_add_staff_title_label.setText("Title");

        admin_add_staff_phone_label.setText("Phone Number");

        admin_add_staff_address_label.setText("Address (City, Street, Postal)");

        admin_add_staff_mail_label.setText("Mail");

        admin_add_staff_hour_label.setText("Work Hour");

        admin_add_staff_polyclinic_label.setText("Polyclinic ID");

        admin_add_staff_staff_ıd_label.setText("Staff ID");

        admin_add_staff_add_staff_button.setText("Add Staff Information");
        admin_add_staff_add_staff_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_add_staff_add_staff_buttonActionPerformed(evt);
            }
        });

        admin_add_staff_cancel_button.setText("Cancel");
        admin_add_staff_cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_add_staff_cancel_buttonActionPerformed(evt);
            }
        });

        admin_add_staff_sex_label.setText("Sex");

        admin_add_staff_male_sex_radiobutton.setText("Male");

        admin_add_staff_female_sex_radiobutton.setText("Female");

        admin_add_staff_no_family_button.setText("No Family");
        admin_add_staff_no_family_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_add_staff_no_family_buttonActionPerformed(evt);
            }
        });

        jButton1.setText("?");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(admin_add_staff_m_name_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(admin_add_staff_f_name_label, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(admin_add_staff_l_name_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(admin_add_staff_password_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(admin_add_staff_title_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(admin_add_staff_phone_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(admin_add_staff_address_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(admin_add_staff_mail_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(admin_add_staff_hour_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(admin_add_staff_polyclinic_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(admin_add_staff_staff_ıd_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(admin_add_staff_f_name_textfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(admin_add_staff_m_name_textfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(admin_add_staff_l_name_textfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(admin_add_staff_password_textfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(admin_add_staff_title_textfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(admin_add_staff_phone_textfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(admin_add_staff_address_textfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(admin_add_staff_mail_textfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(admin_add_staff_hour_textfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(admin_add_staff_polyclinic_textfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(admin_add_staff_staff_ıd_textfield, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(admin_add_staff_sex_label, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(admin_add_staff_male_sex_radiobutton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(admin_add_staff_female_sex_radiobutton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 4, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(38, 38, 38)
                        .addComponent(admin_add_staff_no_family_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(admin_add_staff_cancel_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(admin_add_staff_add_staff_button)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(admin_add_staff_f_name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(admin_add_staff_f_name_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(admin_add_staff_m_name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(admin_add_staff_m_name_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(admin_add_staff_l_name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(admin_add_staff_l_name_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(admin_add_staff_password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(admin_add_staff_password_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(admin_add_staff_title_textfield)
                    .addComponent(admin_add_staff_title_label, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(admin_add_staff_phone_textfield)
                    .addComponent(admin_add_staff_phone_label, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(admin_add_staff_address_textfield)
                    .addComponent(admin_add_staff_address_label, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(admin_add_staff_sex_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(admin_add_staff_male_sex_radiobutton, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(admin_add_staff_female_sex_radiobutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(admin_add_staff_mail_textfield)
                    .addComponent(admin_add_staff_mail_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(admin_add_staff_hour_textfield)
                    .addComponent(admin_add_staff_hour_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(admin_add_staff_polyclinic_textfield)
                    .addComponent(admin_add_staff_polyclinic_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(admin_add_staff_staff_ıd_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(admin_add_staff_staff_ıd_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(admin_add_staff_add_staff_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(admin_add_staff_no_family_button, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(admin_add_staff_cancel_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void is_ıd_exists(){
        String ıd_s = admin_add_staff_staff_ıd_textfield.getText();
        
        Connection con=null;
        PreparedStatement pt = null;
        ResultSet rs = null;
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root","Atoras21");
            pt = con.prepareStatement("SELECT COUNT(*) AS count FROM staff WHERE Staff_ID =?;");
            pt.setString(1, ıd_s);
            rs = pt.executeQuery();
            
            boolean patientExists = false; // Initialize boolean variable

            if (rs.next()) {
                int count = rs.getInt("count"); // Get the value of the count column
                patientExists = count > 0; // Set patientExists to true if count > 0
            }
            if(patientExists){
                JOptionPane.showMessageDialog(this, "Staff ID is already exists.");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                // Close resources in the reverse order of their creation
                if (pt != null) {
                    pt.close();
                }
                if (con != null) {
                    con.close();
                }
            } catch (SQLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private void admin_add_staff_add_staff_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_add_staff_add_staff_buttonActionPerformed
        
        if(is_admin_update == 0){
        String f_name = admin_add_staff_f_name_textfield.getText();
        String m_name = admin_add_staff_m_name_textfield.getText();
        String l_name = admin_add_staff_l_name_textfield.getText();
    
        char sexxx = 'm';
    
        if (admin_add_staff_female_sex_radiobutton.isSelected()) {
            sexxx = 'f';
        } else if (admin_add_staff_male_sex_radiobutton.isSelected()) {
            sexxx = 'm';
        }
        if (!admin_add_staff_male_sex_radiobutton.isSelected() && !admin_add_staff_female_sex_radiobutton.isSelected()) {
            admin_add_staff_female_sex_radiobutton.setSelected(true);
        }
    
    String address = admin_add_staff_address_textfield.getText();
    String[] parts = address.split(",\\s*");
    String city = "";
    String street = "";
    String postal_code = "";
    int count = 0;
    for(String a : parts){
        if(count == 0)
            city = a;
        if(count == 1)
            street = a;
        if(count == 2)
            postal_code = a;
        count++;
    }
    
    String phone = admin_add_staff_phone_textfield.getText();
    
    String mail = admin_add_staff_mail_textfield.getText();
    
    String ıd_s = admin_add_staff_staff_ıd_textfield.getText();
    long ıd = Long.parseLong(ıd_s);
    
    String password = admin_add_staff_password_textfield.getText();
    
    String work_s = admin_add_staff_hour_textfield.getText();
    int work = Integer.parseInt(work_s);
    
    String title = admin_add_staff_title_textfield.getText();
    
    String poly_s = admin_add_staff_polyclinic_textfield.getText();
    int polyclinic_ıd = Integer.parseInt(poly_s);
    
    
    
    try {
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", "Atoras21"); 
        is_ıd_exists();

        String sql = "INSERT INTO staff (Staff_ID, F_name, M_name, L_name, Phone_number, Mail, Polyclinic_ID, Password, Sex, Title, Work_Hour) " +
                     "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        
        // INSERT ROW TO PATIENT TABLE
        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setLong(1, ıd);
        pstmt.setString(2, f_name);
        pstmt.setString(3, m_name);
        pstmt.setString(4, l_name);
        pstmt.setString(5, phone);
        pstmt.setString(6, mail);
        pstmt.setInt(7, polyclinic_ıd); // Assuming Doctor_ID is an integer
        pstmt.setString(8, password);
        pstmt.setString(9, String.valueOf(sexxx));
        pstmt.setString(10, title);
        pstmt.setInt(11, work);
        
        // INSERT ADDRESS TABLE
        String adres = "INSERT INTO address (Address_ID, City, Street, Postal_code) VALUES (?, ?, ?, ?)";
        PreparedStatement adres_ps = con.prepareStatement(adres);
        adres_ps.setLong(1, ıd);
        adres_ps.setString(2, city);
        adres_ps.setString(3, street);
        adres_ps.setString(4, postal_code);
        adres_ps.executeUpdate();
        
        // INSERT FAMILY TABLE
        String familya = "INSERT INTO family (Family_ID) VALUES (?)";
        PreparedStatement familya_ps = con.prepareStatement(familya);
        familya_ps.setLong(1, ıd);
        familya_ps.executeUpdate();
        
        AddFamily af = new AddFamily(ıd,1);
        
        int rowsInserted = pstmt.executeUpdate();
            
        this.setVisible(false);
            //new login().setVisible(true);
        
        af.setVisible(true);
        
    } catch (SQLException ex) {
        Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
    } 
        }
        
        else{
                String f_name = admin_add_staff_f_name_textfield.getText();
                String m_name = admin_add_staff_m_name_textfield.getText();
                String l_name = admin_add_staff_l_name_textfield.getText();

                char sexxx = 'm';

                if (admin_add_staff_female_sex_radiobutton.isSelected()) {
                    sexxx = 'm';
                } else if (admin_add_staff_male_sex_radiobutton.isSelected()) {
                    sexxx = 'f';
                }
                if (!admin_add_staff_male_sex_radiobutton.isSelected() && !admin_add_staff_female_sex_radiobutton.isSelected()) {
                    admin_add_staff_female_sex_radiobutton.setSelected(true);
                }

            String address = admin_add_staff_address_textfield.getText();
            String[] parts = address.split(",\\s*");
            String city = "";
            String street = "";
            String postal_code = "";
            if (parts.length > 0) city = parts[0];
            if (parts.length > 1) street = parts[1];
            if (parts.length > 2) postal_code = parts[2];

            String phone = admin_add_staff_phone_textfield.getText();

            String mail = admin_add_staff_mail_textfield.getText();

            String ıd_s = admin_add_staff_staff_ıd_textfield.getText();
            long ıd = Long.parseLong(ıd_s);

            String password = admin_add_staff_password_textfield.getText();

            String work_s = admin_add_staff_hour_textfield.getText();
            int work = Integer.parseInt(work_s);

            String title = admin_add_staff_title_textfield.getText();

            String poly_s = admin_add_staff_polyclinic_textfield.getText();
            int polyclinic_ıd = Integer.parseInt(poly_s);



            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", "Atoras21"); 

                String sql = "UPDATE staff "
                        + "SET F_name = ?, M_name = ?, L_name = ?, Phone_number = ?, Mail = ?, Polyclinic_ID = ?,"
                        + " Password = ?, Sex = ?, Title = ?, Work_Hour = ? " +
                             "WHERE Staff_ID = ?";

                // INSERT ROW TO PATIENT TABLE
                PreparedStatement pstmt = con.prepareStatement(sql);
                //
                pstmt.setString(1, f_name);
                pstmt.setString(2, m_name);
                pstmt.setString(3, l_name);
                pstmt.setString(4, phone);
                pstmt.setString(5, mail);
                pstmt.setInt(6, polyclinic_ıd); 
                pstmt.setString(7, password);
                pstmt.setString(8, String.valueOf(sexxx));
                pstmt.setString(9, title);
                pstmt.setInt(10, work);
                pstmt.setLong(11, ıd);

                // INSERT ADDRESS TABLE
                String adres = "UPDATE address SET City = ?, Street = ?, Postal_code = ? WHERE (Address_ID = ?)";

                PreparedStatement adres_ps = con.prepareStatement(adres);
                adres_ps.setString(1, city);
                adres_ps.setString(2, street);
                adres_ps.setString(3, postal_code);
                adres_ps.setLong(4, ıd);
                adres_ps.executeUpdate();

                AddFamily af = new AddFamily(ıd,1);
                
                int rowsInserted = pstmt.executeUpdate();

                this.setVisible(false);
                    //new login().setVisible(true);
                af.setVisible(true);

            } catch (SQLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            } 
        
        }
    }//GEN-LAST:event_admin_add_staff_add_staff_buttonActionPerformed

    private void admin_add_staff_no_family_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_add_staff_no_family_buttonActionPerformed
        if(is_admin_update == 0){
        String f_name = admin_add_staff_f_name_textfield.getText();
        String m_name = admin_add_staff_m_name_textfield.getText();
        String l_name = admin_add_staff_l_name_textfield.getText();
    
        char sexxx = 'm';
    
        if (admin_add_staff_female_sex_radiobutton.isSelected()) {
            sexxx = 'm';
        } else if (admin_add_staff_male_sex_radiobutton.isSelected()) {
            sexxx = 'f';
        }
        if (!admin_add_staff_male_sex_radiobutton.isSelected() && !admin_add_staff_female_sex_radiobutton.isSelected()) {
            admin_add_staff_female_sex_radiobutton.setSelected(true);
        }
    
    String address = admin_add_staff_address_textfield.getText();
    String[] parts = address.split(",\\s*");
    String city = "";
    String street = "";
    String postal_code = "";
    int count = 0;
    for(String a : parts){
        if(count == 0)
            city = a;
        if(count == 1)
            street = a;
        if(count == 2)
            postal_code = a;
        count++;
    }
    
    String phone = admin_add_staff_phone_textfield.getText();
    
    String mail = admin_add_staff_mail_textfield.getText();
    
    String ıd_s = admin_add_staff_staff_ıd_textfield.getText();
    long ıd = Long.parseLong(ıd_s);
    
    String password = admin_add_staff_password_textfield.getText();
    
    String work_s = admin_add_staff_hour_textfield.getText();
    int work = Integer.parseInt(work_s);
    
    String title = admin_add_staff_title_textfield.getText();
    
    String poly_s = admin_add_staff_polyclinic_textfield.getText();
    int polyclinic_ıd = Integer.parseInt(poly_s);
    
    
    
    try {
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", "Atoras21"); 
        is_ıd_exists();

        String sql = "INSERT INTO staff (Staff_ID, F_name, M_name, L_name, Phone_number, Mail, Polyclinic_ID, Password, Sex, Title, Work_Hour) " +
                     "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        
        // INSERT ROW TO PATIENT TABLE
        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setLong(1, ıd);
        pstmt.setString(2, f_name);
        pstmt.setString(3, m_name);
        pstmt.setString(4, l_name);
        pstmt.setString(5, phone);
        pstmt.setString(6, mail);
        pstmt.setInt(7, polyclinic_ıd); // Assuming Doctor_ID is an integer
        pstmt.setString(8, password);
        pstmt.setString(9, String.valueOf(sexxx));
        pstmt.setString(10, title);
        pstmt.setInt(11, work);
        
        // INSERT ADDRESS TABLE
        String adres = "INSERT INTO address (Address_ID, City, Street, Postal_code) VALUES (?, ?, ?, ?)";
        PreparedStatement adres_ps = con.prepareStatement(adres);
        adres_ps.setLong(1, ıd);
        adres_ps.setString(2, city);
        adres_ps.setString(3, street);
        adres_ps.setString(4, postal_code);
        adres_ps.executeUpdate();
        
        // INSERT FAMILY TABLE
        String familya = "INSERT INTO family (Family_ID) VALUES (?)";
        PreparedStatement familya_ps = con.prepareStatement(familya);
        familya_ps.setLong(1, ıd);
        familya_ps.executeUpdate();
        
        int rowsInserted = pstmt.executeUpdate();
            
        this.setVisible(false);
            //new login().setVisible(true);
        
        new Admin().setVisible(true);
        
    } catch (SQLException ex) {
        Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
    } 
        }
        
        else{
                String f_name = admin_add_staff_f_name_textfield.getText();
                String m_name = admin_add_staff_m_name_textfield.getText();
                String l_name = admin_add_staff_l_name_textfield.getText();

                char sexxx = 'm';

                if (admin_add_staff_female_sex_radiobutton.isSelected()) {
                    sexxx = 'm';
                } else if (admin_add_staff_male_sex_radiobutton.isSelected()) {
                    sexxx = 'f';
                }
                if (!admin_add_staff_male_sex_radiobutton.isSelected() && !admin_add_staff_female_sex_radiobutton.isSelected()) {
                    admin_add_staff_female_sex_radiobutton.setSelected(true);
                }

            String address = admin_add_staff_address_textfield.getText();
            String[] parts = address.split(" ");

            String city = "";
            String street = "";
            String postal_code = "";

            if (parts.length >= 3) {
                city = parts[0];        
                street = parts[1];
                postal_code = parts[2];
            } else {
                System.out.println("Address format is invalid.");
            }

            String phone = admin_add_staff_phone_textfield.getText();

            String mail = admin_add_staff_mail_textfield.getText();

            String ıd_s = admin_add_staff_staff_ıd_textfield.getText();
            long ıd = Long.parseLong(ıd_s);

            String password = admin_add_staff_password_textfield.getText();

            String work_s = admin_add_staff_hour_textfield.getText();
            int work = Integer.parseInt(work_s);

            String title = admin_add_staff_title_textfield.getText();

            String poly_s = admin_add_staff_polyclinic_textfield.getText();
            int polyclinic_ıd = Integer.parseInt(poly_s);



            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", "Atoras21"); 

                String sql = "UPDATE staff "
                        + "SET F_name = ?, M_name = ?, L_name = ?, Phone_number = ?, Mail = ?, Polyclinic_ID = ?,"
                        + " Password = ?, Sex = ?, Title = ?, Work_Hour = ? " +
                             "WHERE Staff_ID = ?";

                // INSERT ROW TO PATIENT TABLE
                PreparedStatement pstmt = con.prepareStatement(sql);
                //
                pstmt.setString(1, f_name);
                pstmt.setString(2, m_name);
                pstmt.setString(3, l_name);
                pstmt.setString(4, phone);
                pstmt.setString(5, mail);
                pstmt.setInt(6, polyclinic_ıd); // Assuming Doctor_ID is an integer
                pstmt.setString(7, password);
                pstmt.setString(8, String.valueOf(sexxx));
                pstmt.setString(9, title);
                pstmt.setInt(10, work);
                pstmt.setLong(11, ıd);

                // INSERT ADDRESS TABLE
                String adres = "UPDATE address City = ?, Street = ?, Postal_code = ? "
                        + "WHERE Address_ID = ?";
                PreparedStatement adres_ps = con.prepareStatement(adres);
                adres_ps.setString(1, city);
                adres_ps.setString(2, street);
                adres_ps.setString(3, postal_code);
                adres_ps.setLong(4, ıd);
                adres_ps.executeUpdate();
                
                int rowsInserted = pstmt.executeUpdate();

                this.setVisible(false);
                    //new login().setVisible(true);
                new Admin().setVisible(true);

            } catch (SQLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            } 
        
        }
    }//GEN-LAST:event_admin_add_staff_no_family_buttonActionPerformed

    private void admin_add_staff_cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_add_staff_cancel_buttonActionPerformed
        this.setVisible(false);
        new Admin().setVisible(true);
    }//GEN-LAST:event_admin_add_staff_cancel_buttonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JOptionPane.showMessageDialog(this, "Address is first three letters of requested information.");
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminAddStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminAddStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminAddStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminAddStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminAddStaff(0).setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton admin_add_staff_add_staff_button;
    private javax.swing.JLabel admin_add_staff_address_label;
    private javax.swing.JTextField admin_add_staff_address_textfield;
    private javax.swing.JButton admin_add_staff_cancel_button;
    private javax.swing.JLabel admin_add_staff_f_name_label;
    private javax.swing.JTextField admin_add_staff_f_name_textfield;
    private javax.swing.JRadioButton admin_add_staff_female_sex_radiobutton;
    private javax.swing.JLabel admin_add_staff_hour_label;
    private javax.swing.JTextField admin_add_staff_hour_textfield;
    private javax.swing.JLabel admin_add_staff_l_name_label;
    private javax.swing.JTextField admin_add_staff_l_name_textfield;
    private javax.swing.JLabel admin_add_staff_m_name_label;
    private javax.swing.JTextField admin_add_staff_m_name_textfield;
    private javax.swing.JLabel admin_add_staff_mail_label;
    private javax.swing.JTextField admin_add_staff_mail_textfield;
    private javax.swing.JRadioButton admin_add_staff_male_sex_radiobutton;
    private javax.swing.JButton admin_add_staff_no_family_button;
    private javax.swing.JLabel admin_add_staff_password_label;
    private javax.swing.JTextField admin_add_staff_password_textfield;
    private javax.swing.JLabel admin_add_staff_phone_label;
    private javax.swing.JTextField admin_add_staff_phone_textfield;
    private javax.swing.JLabel admin_add_staff_polyclinic_label;
    private javax.swing.JTextField admin_add_staff_polyclinic_textfield;
    private javax.swing.JLabel admin_add_staff_sex_label;
    private javax.swing.JLabel admin_add_staff_staff_ıd_label;
    private javax.swing.JTextField admin_add_staff_staff_ıd_textfield;
    private javax.swing.JLabel admin_add_staff_title_label;
    private javax.swing.JTextField admin_add_staff_title_textfield;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
